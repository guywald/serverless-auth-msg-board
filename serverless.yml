service: message-board-auth-example

frameworkVersion: ">=1.9.0"

provider:
  name: aws
  runtime: python3.6
  stage: dev
  region: eu-west-1

  environment:
    DYNAMODB_MESSAGES_TABLE: "${self:service}-${opt:stage, self:provider.stage}-message-board"
    DYNAMODB_MESSAGES_TABLE_REGION: "${self:provider.region}"

  iamRoleStatements:
  - Effect: "Allow"
    Action:
      - dynamodb:*
    Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_MESSAGES_TABLE}"

functions:
  create:
    handler: ServerlessAuthMessageBoard.create_message
    name: MessageBoardExampleCreate
    events:
      - http:
          path: create
          method: post
          cors: true
          integration: lambda-proxy

  # list:
  #   handler: msg/list.list
  #   events:
  #     - http:
  #         path: msg
  #         method: get
  #         cors: true

  # get:
  #   handler: msg/get.get
  #   events:
  #     - http:
  #         path: msg/{id}
  #         method: get
  #         cors: true

  # update:
  #   handler: msg/update.update
  #   events:
  #     - http:
  #         path: msg/{id}
  #         method: put
  #         cors: true

  # delete:
  #   handler: msg/delete.delete
  #   events:
  #     - http:
  #         path: msg/{id}
  #         method: delete
  #         cors: true

resources:
  Resources:
    MessagesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: Id
            AttributeType: S
        KeySchema:
          -
            AttributeName: Id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_MESSAGES_TABLE}
    
    ApiGatewayMethodCreatePost:
      Properties:
        AuthorizationType: AWS_IAM
        HttpMethod: post
